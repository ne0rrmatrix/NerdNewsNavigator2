name: Build Maccatalyst

on:
  workflow_dispatch:
permissions: read-all|write-all

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  PROJECT_PATH: "NerdNewsNavigator2/NerdNewsNavigator2.csproj"
  NUGETCONFIG_PATH: "nuget.config"
 
jobs:


# ********************************* #
# >>>>>>> MacCatalyst Build <<<<<<< #
# ********************************* #
 maui-macos:
    runs-on: macos-12
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Generate version number using date and run number
      id: version-creator
      shell: bash
      run: |
        buildDay=`date +%Y.%m%d`
        echo $buildDay
        runNum=${{ env.GITHUB_RUN_NUMBER }}
        ver="${buildDay}.${runNum}.0"
        echo $ver
        echo "APP_VERSION=$ver" >> $GITHUB_ENV
    - name: Install MAUI workloads (required for GitHub-hosted runners)
      shell: pwsh
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      shell: bash
      run: dotnet restore ${{ env.PROJECT_PATH }} --configfile ${{ env.NUGETCONFIG_PATH }}
    
    - name: Build MAUI MacCatalyst project
      shell: bash
      run: |
          dotnet build ${{ env.PROJECT_PATH }} -f net7.0-maccatalyst -c Release 
          dotnet publish ${{ env.PROJECT_PATH }} -f net7.0-maccatalyst -c Release -p:BuildIpa=True

# ********************************* #
# >>>>>>> Upload Artifacts <<<<<<< #
# ********************************* #

    - uses: actions/upload-artifact@v2
      with:
          name: artifacts-mac
          path: |
            NerdNewsNavigator2/bin/Release/net7.0-maccatalyst/**/*.pkg

# ********************************* #
# >>>>>>> Build Release <<<<<<< #
# ********************************* #

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            NerdNewsNavigator2/bin/Release/net7.0-maccatalyst/**/*.pkg
        
